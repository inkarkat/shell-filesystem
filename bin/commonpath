#!/bin/bash
# Source: https://github.com/l0b0/tilde/blob/master/.bash_aliases#L64

printUsage()
{
    cat <<HELPTEXT
Print the directory that is common to all passed FILESPECs.
Fails if there's no common path (i.e. only / is common).
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" '[-f|--canonicalize] [--] FILESPEC [...] [-?|-h|--help]'
}
isCanonicalize=
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--canonicalize|-f)
			shift; isCanonicalize=t;;
	--)		shift; break;;
	-*)		{ echo "ERROR: Unknown option \"$1\"!"; echo; printUsage "$0"; } >&2; exit 2;;
	*)		break;;
    esac
done
if [ $# -eq 0 ]; then
    printUsage >&2 "$0"
    exit 2
fi
if [ "$isCanonicalize" ]; then
    readarray -t filespecs < <(readlink --canonicalize -- "$@")
    set -- "${filespecs[@]}"
else
    # Remove repeated slashes.
    for param
    do
	param="$(printf %s. "$1" | tr -s /)"
	set -- "$@" "${param%.}"
	shift
    done
fi

if [ $# -eq 1 ]; then
    printf '%s\n' "${1%/*}"
    exit
fi

common_path="$1"
shift

for param
do
    while case "${param%/}/" in "${common_path%/}/"*) false;; esac; do
	new_common_path="${common_path%/*}"
	[ "$new_common_path" = "$common_path" ] && exit 1 # Dead end
	common_path="$new_common_path"
    done
done
[ -z "$common_path" ] && exit 1
printf '%s\n' "$common_path"
