#!/bin/bash

printShortUsage()
{
    # Note: short followed by long option; if the user knows the short one, she can
    # skim the long one.
    printf 'Usage: %q %s\n' "$(basename "$1")" '[-b|--bare] [-t|--types LIST] [-u|--user|-U|--no-user] [-?|-h|--help]'
}
printUsage()
{
    # This is the short help when launched with no or incorrect arguments.
    # It is printed to stderr to avoid accidental processing.
    printShortUsage "$1" >&2
    printf >&2 '\nTry %q --help for more information.\n' "$(basename "$1")"
}
printLongUsage()
{
    # This is the long "man page" when launched with the help argument.
    # It is printed to stdout to allow paging with 'more'.
    cat <<HELPDESCRIPTION
Print "real" mounts and useful information about them.
HELPDESCRIPTION
    echo
    printShortUsage "$1"
    echo
    cat <<HELPTEXT
    --bare|-b		Do not print a header and omit any additional
			information; just print the mount points themselves.
    --types|-t LIST	Limit the set of printed filesystems. More than one type
			may be specified in a comma-separated list. The list of
			filesystem types can be prefixed with "no" to specify
			the filesystem types on which no action should be taken.
    --[no-]user|-u|-U	Only / do not list mounts for the current user in
			/media/<USER>/.
HELPTEXT
}

isBare=
typeset -a additionalSedArgs=()
typeset -a findmntArgs=()
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printLongUsage "$0"; exit 0;;
	--bare|-b)	shift; isBare=t;;
	--types|-t)	findmntArgs+=("$1" "$2"); shift; shift;;
	--user|-u)	shift; additionalSedArgs+=(-e "/^\/media\/${USER}\//!d");;
	--no-user|-U)	shift; additionalSedArgs+=(-e "/^\/media\/${USER}\//d");;
	--)		shift; break;;
	-*)		{ echo "ERROR: Unknown option \"$1\"!"; echo; printUsage "$0"; } >&2; exit 2;;
	*)		break;;
    esac
done

#mount "$@" | sed -e '/ on \/\(dev\|proc\|run\|snap\|sys\)[ /]/d' -e '/^veracrypt /d' -e 's/ \(on\|type\) / /g' | sort -k 2,2 | column -t
findmnt --list --output target,source,fstype,size,use%,options "${findmntArgs[@]}" | \
    {
	read -r header; [ "$isBare" ] || printf '%s\n' "$header"
	sed -e '/^\/\(dev\|proc\|run\|snap\|sys\)[ /]/d' -e '/[[:space:]]veracrypt[[:space:]]/d' "${additionalSedArgs[@]}" | \
	eval 'sort -k 1,1' "${isBare:+| field 1}"
    }
