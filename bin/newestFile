#!/bin/bash
set -o pipefail

printShortUsage()
{
    # Note: short followed by long option; if the user knows the short one, she can
    # skim the long one.
    printf 'Usage: %q %s\n' "$(basename "$1")" '[-e|--epoch-only|-n|--name-only] [--] [DIRSPEC [...]] [FIND-ARGS ...] [-?|-h|--help]'
}
printUsage()
{
    # This is the short help when launched with no or incorrect arguments.
    # It is printed to stderr to avoid accidental processing.
    printShortUsage "$1" >&2
    printf >&2 '\nTry %q --help for more information.\n' "$(basename "$1")"
}
printLongUsage()
{
    # This is the long "man page" when launched with the help argument.
    # It is printed to stdout to allow paging with 'more'.
    cat <<HELPDESCRIPTION
Print the file modification date, tab, and file name of the last modified file
in the current directory tree / DIRSPEC [matching FIND-ARGS].
HELPDESCRIPTION
    echo
    printShortUsage "$1"
    echo
    cat <<HELPTEXT
    --epoch-only|-e	Omit the filename; just print the file modification date
			(seconds since 1970).
    --name-only|-n	Omit the file modification date, just print the file
			path (as returned by find).
    -maxdepth 1		Do not recurse into subdirectories.

SEE ALSO:
- newestFiles (plural) can include more than one file, based on counting or a
  sentinel file. It does not (but can) recurse by default and can also directly
  include directories themselves.

EXIT STATUS:
    0	Complete success.
    1	No files found.
    2	Bad invocation, wrong or missing command-line arguments.
HELPTEXT
}

outputFormat='fileAge "\t" filespec'
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printLongUsage "$0"; exit 0;;
	--epoch-only|-e)
			shift; outputFormat='fileAge';;
	--name-only|-n)	shift; outputFormat='filespec';;
	--)		shift; break;;
	*)		break;;
    esac
done

[ $# -eq 0 ] && set -- .

find "$@" -type f -printf "%T@\0%p\0" | awk \
'
BEGIN {
    RS="\0"
}
{
    if ($0 > fileAge) {
	fileAge = $0
	getline filespec
	filespec = gensub(/^\.\//, "", 1, filespec)
    } else {
	getline
    }
}
'"
END {
    if (fileAge) {
	fileAge = int(fileAge)
	print $outputFormat
    } else {
	exit(1)
    }
}
"
