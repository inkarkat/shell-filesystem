#!/bin/bash
set -e # Terminate the script at first error.

: ${GET_EXECUTABLE_DETAILS_FOR_DIR_MAX_SHOW_COMMANDS:=7}

printUsage()
{
    cat <<HELPTEXT
Determine the number of executable commands in DIR and print a message
mentioning the first ${GET_EXECUTABLE_DETAILS_FOR_DIR_MAX_SHOW_COMMANDS} of them.
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" 'DIR [-?|-h|--help]'
}
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
esac
if [ $# -ne 1 ]; then
    printUsage "$0" >&2
    exit 2
fi

cd "${1:?}"

executableCnt=0
executableDetails=
for filename in *
do
    [ ! -d "$filename" -a -x "$filename" ] || continue

    if [ $executableCnt -lt $GET_EXECUTABLE_DETAILS_FOR_DIR_MAX_SHOW_COMMANDS ]; then
	executableDetails+="${executableDetails:+, }$filename"
    elif [ $executableCnt -eq $GET_EXECUTABLE_DETAILS_FOR_DIR_MAX_SHOW_COMMANDS ]; then
	executableDetails+=', ...'
    fi

    let executableCnt+=1
done

executableCntPlural=s
executableCntSuffix=': '
case "$executableCnt" in
    0)	executableCnt='No'
	executableCntSuffix='.'
	;;
    1)	executableCntPlural=;;
esac
printf '%s command%s available%s%s\n' "$executableCnt" "$executableCntPlural" "$executableCntSuffix" "$executableDetails"
