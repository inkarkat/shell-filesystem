#!/bin/bash

# https://github.com/dominictarr/JSON.sh/pull/2#issuecomment-2526006
readlinkEmulation()
{
    if ! cd "$(dirname "$1")" 2>/dev/null; then
	printf %s "$1"
	return
    fi

    local filename="$(basename "$1")"
    if [ -h "$filename" ]; then
	readlinkEmulation "$(readlink "$filename")"
    else
	printf %s "$(pwd -P)/${filename}"
    fi
}
readlinkWrapper()
{
    readlink -nf "$@" 2>/dev/null || readlinkEmulation "$@"
}

printUsage()
{
    cat <<HELPTEXT
Test whether the current working directory or (all) passed FILE(s) lie inside
(any of) the directory tree(s) at DIRSPEC.
HELPTEXT
    printf 'Usage: %q %s\n' "$(basename "$1")" 'DIRSPEC [FILE [...]] [-?|-h|--help]'
    printf 'Usage: %q %s\n' "$(basename "$1")" '-d|--dir DIRSPEC [...] [--] [FILE [...]] [-?|-h|--help]'
}
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
esac
typeset -a dirspecs=()
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--dir|-d)	shift; dirspecs+=("$(readlinkWrapper "$1")"); shift;;
	--)		shift; break;;
	-*)		{ echo "ERROR: Unknown option \"$1\"!"; echo; printUsage "$0"; } >&2; exit 2;;
	*)		break;;
    esac
done
if [ ${#dirspecs[@]} -eq 0 ]; then
    dirspecs+=("$(readlinkWrapper "$1")"); shift
fi
typeset -a filespecs=()
for file in "${@:-"$PWD"}"
do
    filespecs+=("$(readlinkWrapper "$file")")
done

isFileInsideAnyDir()
{
    local file="${1:?}"; shift
    for dir in "${dirspecs[@]}"
    do
	case "${file}/" in
	    "${dir}"/*) return 0;;
	    *)		;;
	esac
    done
    return 1
}

for file in "${filespecs[@]}"
do
    isFileInsideAnyDir "$file" || exit 1
done
